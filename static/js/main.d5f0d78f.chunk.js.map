{"version":3,"sources":["pages/About.js","components/Sidebar.js","pages/Events.js","App.js","index.js"],"names":["About","href","Sidebar","loading","setLoading","showFaultSources","onFaultSourceChanged","Tabs","defaultActiveKey","transition","Tab","eventKey","title","Form","Row","Col","Check","id","type","label","checked","onChange","faultSourceStyle","color","opacity","weight","handleEachFaultSource","layer","properties","CREATED","DIPMAX","DIPMIN","IDSOURCE","LINK","MAXDEPTH","MAXMAG","MINDEPTH","RAKEMAX","RAKEMIN","REGION","SOURCENAME","SRMAX","SRMIN","STRIKEMAX","STRIKEMIN","UPDATED","el","bindPopup","maxWidth","Map","MapContainer","center","zoom","scrollWheelZoom","style","height","TileLayer","attribution","url","GeoJSON","data","faultSources","features","onEachFeature","Events","props","useState","showPanel","setShowPanel","setShowFaultSources","detailsIcDirClass","sidebarIfClicked","xs","event","console","log","Button","borderRadius","marginBottom","size","variant","onClick","className","PageNotFound","GithubRepo","repo","Navbar","Brand","src","process","width","alt","Header","bg","expand","fixed","Toggle","Collapse","Nav","Link","Spinner","animation","role","App","globalEvents","Container","fluid","paddingTop","basename","exact","path","render","component","status","ReactDOM","StrictMode","document","getElementById"],"mappings":"6ggrBAceA,EAZD,WACZ,OACE,gCACE,uCACA,gFAC+C,IAC7C,mBAAGC,KAAK,4BAAR,oC,gFC0BOC,G,MA9BC,SAAC,GAKX,EAJJC,QAII,EAHJC,WAGK,IAFLC,EAEI,EAFJA,iBACAC,EACI,EADJA,qBAEA,OACE,eAACC,EAAA,EAAD,CAAMC,iBAAiB,SAASC,YAAY,EAA5C,UACE,cAACC,EAAA,EAAD,CAAKC,SAAS,SAASC,MAAM,SAA7B,oBAGA,cAACF,EAAA,EAAD,CAAKC,SAAS,SAASC,MAAM,SAA7B,SACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAACF,EAAA,EAAKG,MAAN,CACEC,GAAG,cACHC,KAAK,WACLC,MAAM,gBACNC,QAASf,EACTgB,SAAUf,iB,QChBpBgB,EAAmB,CACvBC,MAAO,QACPC,QAAS,GAGTC,OAAQ,GAGJC,EAAwB,SAAC,EAAgBC,GAAW,IAAzBC,EAAwB,EAAxBA,WAI7BC,EAEED,EAFFC,QAASC,EAEPF,EAFOE,OAAQC,EAEfH,EAFeG,OAAQC,EAEvBJ,EAFuBI,SAAUC,EAEjCL,EAFiCK,KAAMC,EAEvCN,EAFuCM,SAAUC,EAEjDP,EAFiDO,OAAQC,EAEzDR,EAFyDQ,SAC3DC,EACET,EADFS,QAASC,EACPV,EADOU,QAASC,EAChBX,EADgBW,OAAQC,EACxBZ,EADwBY,WAAYC,EACpCb,EADoCa,MAAOC,EAC3Cd,EAD2Cc,MAAOC,EAClDf,EADkDe,UAAWC,EAC7DhB,EAD6DgB,UAAWC,EACxEjB,EADwEiB,QAGtEC,EAAE,mGAGwBP,EAHxB,qDAIsBP,EAJtB,qDAKsBQ,EALtB,wDAMyBX,EANzB,wDAOyBgB,EAPzB,gJAYgCT,EAZhC,+DAagCF,EAbhC,6DAc8BU,EAd9B,cAc6CD,EAd7C,0DAe2BZ,EAf3B,cAeuCD,EAfvC,2DAgB4BQ,EAhB5B,cAgByCD,EAhBzC,iEAiBkCK,EAjBlC,cAiB6CD,EAjB7C,mEAkBoCN,EAlBpC,mFAqBuBF,EArBvB,aAqBgCA,EArBhC,kBAuBRN,EAAMoB,UAAUD,EAAI,CAAEE,SAAU,OAG5BC,EAAM,SAAC,GAA0B,IAAxB5C,EAAuB,EAAvBA,iBACb,OACE,eAAC6C,EAAA,EAAD,CACEC,OAAQ,CAAC,QAAS,SAClBC,KAAM,EACNC,iBAAiB,EACjBC,MAAO,CAAEC,OAAQ,QAJnB,UAME,cAACC,EAAA,EAAD,CACEC,YAAY,yEACZC,IAAI,uDAELrD,GACC,cAACsD,EAAA,EAAD,CAEEL,MAAOhC,EACPsC,KAAMC,EAAaC,SACnBC,cAAerC,GAJjB,UACUrB,EADV,cA0DO2D,EA/CA,SAACC,GACkBA,EAAxB9D,QAAwB8D,EAAf7D,WAAjB,IACA,EAAkC8D,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgDF,oBAAS,GAAzD,mBAAO7D,EAAP,KAAyBgE,EAAzB,KAEMC,EAAoBH,EAAY,OAAS,QAWzCI,EAAmBJ,GACvB,cAACpD,EAAA,EAAD,CAAKyD,GAAI,EAAT,SACE,cAAC,EAAD,aACElE,qBAR2B,SAACmE,GAChCC,QAAQC,IAAIF,EAAOpE,GACnBgE,GAAqBhE,IAOjBA,iBAAkBA,GACd4D,MAKV,OACE,gCACE,eAACW,EAAA,EAAD,CACEtB,MAAO,CAAEuB,aAAc,MAAOC,aAAc,OAC5C,aAAW,eACXC,KAAK,KACLC,QAAQ,eACRC,QA1BqB,WACzBb,GAAcD,IAoBZ,UAOE,mBAAGe,UAAS,gBAAWZ,KAPzB,YASA,eAACxD,EAAA,EAAD,WACGyD,EACD,cAACxD,EAAA,EAAD,UACE,cAAC,EAAD,CAAKV,iBAAkBA,aC3G3B8E,G,MAAe,kBAAM,yDAErBC,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACjB,cAACC,EAAA,EAAOC,MAAR,CAActF,KAAI,6BAAwBoF,GAA1C,SACE,gCACE,qBACEG,IAAG,UAAKC,iBAAL,oBACHC,MAAO,GACPnC,OAAQ,GACRoC,IAAI,gBACH,IACFN,QAKDO,EAAS,SAAC,GAAD,IAAGzF,EAAH,EAAGA,QAAH,OACb,eAACmF,EAAA,EAAD,CAAQO,GAAG,UAAUb,QAAQ,OAAOc,OAAO,KAAKC,MAAM,MAAtD,UACE,cAAC,EAAD,CAAYV,KAAK,wBACjB,cAACC,EAAA,EAAOU,OAAR,IACA,cAACV,EAAA,EAAOW,SAAR,UACE,eAACC,EAAA,EAAD,WACE,cAACA,EAAA,EAAIC,KAAL,CAAUlG,KAAK,KAAf,oBACA,cAACiG,EAAA,EAAIC,KAAL,CAAUlG,KAAK,SAAf,wBAGHE,GACC,cAACiG,EAAA,EAAD,CACElB,UAAU,sBACVmB,UAAU,SACVC,KAAK,SACLtB,QAAQ,cA8BDuB,EAxBH,WACV,MAA8BrC,oBAAS,GAAvC,mBACMsC,EAAe,CAAErG,QADvB,KACgCC,WADhC,MAGA,OACE,eAACqG,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACE,cAAC,EAAD,eAAYF,IACZ,qBAAKlD,MAAO,CAAEqD,WAAY,SAA1B,SACE,cAAC,IAAD,CAAQC,SAAUnB,iBAAlB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEoB,OAAK,EACLC,KAAK,IACLC,OAAQ,SAAC9C,GAAD,OAAW,cAAC,EAAD,2BAAYuC,GAAkBvC,OAEnD,cAAC,IAAD,CAAO4C,OAAK,EAACC,KAAK,SAASE,UAAWhH,IACtC,cAAC,IAAD,CAAOgH,UAAW7B,EAAc8B,OAAQ,iBCvDpDC,IAASH,OACP,cAAC,IAAMI,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d5f0d78f.chunk.js","sourcesContent":["import React from 'react'\n\nconst About = () => {\n  return (\n    <div>\n      <h1>About</h1>\n      <p>\n        LGPLv2.1 Licensed | Copyright © 2021-present{' '}\n        <a href=\"https://github.com/eozer/\">Ege Can Özer</a>\n      </p>\n    </div>\n  )\n}\n\nexport default About\n","import React from 'react'\nimport { Row, Col, Form, Tabs, Tab } from 'react-bootstrap'\nimport './Sidebar.css'\n\nconst Sidebar = ({\n  loading,\n  setLoading,\n  showFaultSources,\n  onFaultSourceChanged,\n}) => {\n  return (\n    <Tabs defaultActiveKey=\"legend\" transition={false}>\n      <Tab eventKey=\"legend\" title=\"Legend\">\n        Legend\n      </Tab>\n      <Tab eventKey=\"layers\" title=\"Layers\">\n        <Form>\n          <Row>\n            <Col>\n              <Form.Check\n                id=\"faultsrc-cb\"\n                type=\"checkbox\"\n                label=\"Fault sources\"\n                checked={showFaultSources}\n                onChange={onFaultSourceChanged}\n              />\n            </Col>\n          </Row>\n        </Form>\n      </Tab>\n    </Tabs>\n  )\n}\n\nexport default Sidebar\n","import React, { useState } from 'react'\nimport { MapContainer, TileLayer, GeoJSON } from 'react-leaflet'\nimport { Row, Col, Button } from 'react-bootstrap'\nimport Sidebar from '../components/Sidebar'\nimport './../components/Sidebar.css'\n\nimport faultSources from './../fault_sources.json'\n\nconst faultSourceStyle = {\n  color: 'black',\n  opacity: 0.6,\n  // dashArray: '20, 20',\n  // dashOffset: '0',\n  weight: 2,\n}\n\nconst handleEachFaultSource = ({ properties }, layer) => {\n  // TODO: Use fault sources only from Turkey. Remove using QGIS.\n  // prettier-ignore\n  const {\n    CREATED, DIPMAX, DIPMIN, IDSOURCE, LINK, MAXDEPTH, MAXMAG, MINDEPTH,\n    RAKEMAX, RAKEMIN, REGION, SOURCENAME, SRMAX, SRMIN, STRIKEMAX, STRIKEMIN, UPDATED,\n  } = properties\n\n  const el = `<div>\n  <h6>General information</h6>\n  <table><tbody>\n  <tr><td><b>Region</b></td><td>${REGION}</td></tr>\n  <tr><td><b>Code</b></td><td>${IDSOURCE}</td></tr>\n  <tr><td><b>Name</b></td><td>${SOURCENAME}</td></tr>\n  <tr><td><b>Created</b></td><td>${CREATED}</td></tr>\n  <tr><td><b>Updated</b></td><td>${UPDATED}</td></tr>\n  </tbody></table>\n  <hr>\n  <h6>Parametric information</h6>\n  <table><tbody>\n  <tr><td><b>Min Depth (km)</b></td><td>${MINDEPTH}</td></tr>\n  <tr><td><b>Max Depth (km)</b></td><td>${MAXDEPTH}</td></tr>\n  <tr><td><b>Strike (deg)</b></td><td>${STRIKEMIN} - ${STRIKEMAX}</td></tr>\n  <tr><td><b>Dip (deg)</b></td><td>${DIPMIN} - ${DIPMAX}</td></tr>\n  <tr><td><b>Rake (deg)</b></td><td>${RAKEMIN} - ${RAKEMAX}</td></tr>\n  <tr><td><b>Slip Rate (mm/y)</b></td><td>${SRMIN} - ${SRMAX}</td></tr>\n  <tr><td><b>Max Magnitude (Mw)</b></td><td>${MAXMAG}</td></tr>\n  </tbody></table>\n  </br>\n  <i>Source:&nbsp;</i><a href=\"${LINK}\">${LINK}</a>\n  </div>`\n  layer.bindPopup(el, { maxWidth: 560 })\n}\n\nconst Map = ({ showFaultSources }) => {\n  return (\n    <MapContainer\n      center={[38.9637, 35.2433]}\n      zoom={7}\n      scrollWheelZoom={true}\n      style={{ height: '70em' }}\n    >\n      <TileLayer\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n      {showFaultSources && (\n        <GeoJSON\n          key={`${showFaultSources}-fsrc`}\n          style={faultSourceStyle}\n          data={faultSources.features}\n          onEachFeature={handleEachFaultSource}\n        />\n      )}\n    </MapContainer>\n  )\n}\n\nconst Events = (props) => {\n  const { loading, setLoading } = props\n  const [showPanel, setShowPanel] = useState(false)\n  const [showFaultSources, setShowFaultSources] = useState(true)\n\n  const detailsIcDirClass = showPanel ? 'left' : 'right'\n\n  const handleDetailsClick = () => {\n    setShowPanel(!showPanel)\n  }\n\n  const handleFaultSourceChanged = (event) => {\n    console.log(event, showFaultSources)\n    setShowFaultSources(!showFaultSources)\n  }\n\n  const sidebarIfClicked = showPanel && (\n    <Col xs={2}>\n      <Sidebar\n        onFaultSourceChanged={handleFaultSourceChanged}\n        showFaultSources={showFaultSources}\n        {...props}\n      />\n    </Col>\n  )\n\n  return (\n    <div>\n      <Button\n        style={{ borderRadius: '1em', marginBottom: '4px' }}\n        aria-label=\"Expand panel\"\n        size=\"sm\"\n        variant=\"outline-dark\"\n        onClick={handleDetailsClick}\n      >\n        <i className={`arrow ${detailsIcDirClass}`} /> Panel\n      </Button>\n      <Row>\n        {sidebarIfClicked}\n        <Col>\n          <Map showFaultSources={showFaultSources} />\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default Events\n","import React, { useState } from 'react'\nimport { Route, HashRouter as Router, Switch } from 'react-router-dom'\nimport { Container, Nav, Navbar, Spinner } from 'react-bootstrap'\n\nimport { About, Home, Events } from './pages'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nconst PageNotFound = () => <div>Page not found - 404</div>\n\nconst GithubRepo = ({ repo }) => (\n  <Navbar.Brand href={`https://github.com/${repo}`}>\n    <div>\n      <img\n        src={`${process.env.PUBLIC_URL}/github-icon.png`}\n        width={32}\n        height={32}\n        alt=\"Github icon\"\n      />{' '}\n      {repo}\n    </div>\n  </Navbar.Brand>\n)\n\nconst Header = ({ loading }) => (\n  <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\" fixed=\"top\">\n    <GithubRepo repo=\"eozer/krdae-history\" />\n    <Navbar.Toggle />\n    <Navbar.Collapse>\n      <Nav>\n        <Nav.Link href=\"#/\">Events</Nav.Link>\n        <Nav.Link href=\"#about\">About</Nav.Link>\n      </Nav>\n    </Navbar.Collapse>\n    {loading && (\n      <Spinner\n        className=\"justify-content-end\"\n        animation=\"border\"\n        role=\"status\"\n        variant=\"light\"\n      />\n    )}\n  </Navbar>\n)\n\nconst App = () => {\n  const [loading, setLoading] = useState(false)\n  const globalEvents = { loading, setLoading }\n\n  return (\n    <Container fluid>\n      <Header {...globalEvents} />\n      <div style={{ paddingTop: '4.5em' }}>\n        <Router basename={process.env.PUBLIC_URL}>\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={(props) => <Events {...globalEvents} {...props} />}\n            />\n            <Route exact path=\"/about\" component={About} />\n            <Route component={PageNotFound} status={404} />\n          </Switch>\n        </Router>\n      </div>\n    </Container>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}